[% INCLUDE 'setup/Perl' %]

[%# ROME Variables, defined by setup/R:
   $rome_userdir
   $rome_username  
   $rome_experiment_name 

%]

[%# TT Arguments from Processor
    rome_datafiles_out
    rome_datafiles_in
%]

[%# TT Arguments from controller 
  gene_id : an array reference
%]


use Storable qw/nstore retrieve/;
use IO::File;

#retrieve the ensembl gene
#this also requires all the relevant ensembl api libs. 
\$Storable::Eval=1;
my \$code = retrieve('[% rome_datafiles_in.EnsemblGene.name %]');
my (\$gene, \$gene_ad, \$registry) = &\$code;

#ok, we're just going to print a load of info out to the textfile
my \$fh = new IO::File;
\$fh->open("> [% rome_datafiles_out.TXT.name %]") or die "Failed to open file [%rome_datafiles_out.TXT.name%]";


print \$fh 'Gene: '.\$gene->display_id."\n";
print \$fh "\t".\$gene->description."\n\n";
print \$fh "Chromosome ".\$gene->slice->seq_region_name;
print \$fh ' (start: '.\$gene->start.' end: '.\$gene->end;
print \$fh ' strand: '.\$gene->strand.")\n";
print \$fh "Species: ".\$gene->adaptor->db->species."\n\n";

my @exons = @{\$gene->get_all_Exons};
print \$fh 'This gene has '.@exons." Exon(s):\n\n";
my %exons;

for (my \$i=0; \$i<=\$#exons; \$i++){
  \$exons{\$exons[\$i]->display_id} = \$i;
  print \$fh "\t".\$i."\t".\$exons[\$i]->display_id.': '
               .\$exons[\$i]->start.'-'
               .\$exons[\$i]->end."\n";
}

#get the transcripts and TSSs
my @transcripts = @{\$gene->get_all_Transcripts};

print \$fh "\nwhich make ".@transcripts. " transcript(s)\n";
my @tss;
foreach my \$transcript (@transcripts){
  my \$seq = \$transcript->seq;
  print \$fh \$transcript->display_id
               ."\t".\$transcript->start
               ."-".\$transcript->end
	       ."\n";
  my \$tss = \$gene->strand == 1 ? \$transcript->start : \$transcript->end;
  my \$start_exon = \$transcript->start_Exon;
  print \$fh "\t starts at chromosome position \$tss in exon ".\$exons{\$start_exon->display_id}.' ('.\$start_exon->display_id.')'."\n";
}

\$fh->close;


