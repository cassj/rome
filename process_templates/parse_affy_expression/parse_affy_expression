[% INCLUDE 'setup/R' %]

#load the required libraries
library(affy)
library(rjson)


[%# ROME Variables, defined by setup/R:
   con 
   rome.userdir
   rome.username  
   rome.experiment_name 

%]

[%# Arguments from Processor
    rome_datafiles_out
    rome_datafiles_in
%]

[%# Arguments from controller 
  filenames : an array reference
%]



###
# change into the user's upload dir

cwd<-getwd()
setwd(paste(rome.userdir,'/uploads',sep=""));

###
# create affybatch
AB<-ReadAffy(filenames=c("[% filenames.join('", "')%]"));

###
# change into the user's data directory

setwd(rome.userdir)

[%#
   get the (unique, at least for this user) name of the 
   actual datafile we are calling the RawAffy file
%]

###
# set the filename, add an appropriate extension

filename <- "[% rome_datafiles_out.AB.name %]"
save(AB, file=filename);


###
# This datafile corresponds to a number of outcomes.
# Print them to output to be handled by the ParseAffy job scheduler

for (name in colnames(exprs(AB))){

  #warn the parser to JSON this bit
  cat("START_JSON\n")

  outcome<-c(name, 
             rome.experiment_name, 
             rome.username,
             "[% rome_datafiles_out.AB.name %]",
	     "[% rome_datafiles_out.AB.experiment_name %]",
	     "[% rome_datafiles_out.AB.experiment_owner %]"
	     );
  names(outcome)<-c("outcome_name",
                    "outcome_experiment_name",
		    "outcome_experiment_owner",
		    "datafile_name",
		    "datafile_experiment_name",
		    "datafile_experiment_owner"
                   )

  json<-toJSON(outcome);
  cat(json,"\n",sep="");
		
  cat("STOP_JSON\n")
     
}




#change back to where you were 
setwd(cwd);
