
[% INCLUDE 'setup/Perl' %]

[%# ROME Variables, defined by setup/R:
   $rome_userdir
   $rome_username  
   $rome_experiment_name 

%]

[%# TT Arguments from Processor
    rome_datafiles_out
    rome_datafiles_in
%]

[%# TT Arguments from controller 
  gene_id : an array reference
%]


use Storable qw/nstore/;


#this code will retrieve and return the appropriate ensembl gene
my \$code = sub {
  
  #retreive the code for the registry connection
  require Storable;
  \$Storable::Eval=1;
  my \$registry_code = Storable::retrieve('[% rome_datafiles_in.EnsemblDBRegistry.name %]');
  my \$registry = &\$registry_code; 

  #check what species we're dealing with 
  my (\$species,\$type) = \$registry->get_species_and_object_type("[% gene_id %]");
  
  #retrieve a gene adaptor for that species.
  my \$gene_ad = \$registry->get_adaptor(\$species,'core',\$type);
  
  #get the gene
  my \$gene = \$gene_ad->fetch_by_stable_id("[% gene_id %]");
  
  return \$gene;
};


#save the gene retrieval code in the appropriate datafile using storable?
\$Storable::Deparse =1;
my \$filename = "[% rome_datafiles_out.GENE.name %]";
nstore \$code, \$filename;

#note to self. retrieve like:
#\$Storable::Eval=1;
#my \$test = &{retrieve \$filename};
#use Data::Dumper;
#die Dumper \$test;


#in this case, we have only a single gene and it's not really the result
#of an experiment so outcomes are not meaningful and we don't need to set them.








